class Solution {
public:
    unordered_set<string> st;
    vector<int> dp;
    int solve(string& s, int idx){ 
        if(idx >= s.size()){
            return 0;
        }
        if(dp[idx] != -1){
            return dp[idx];
        }
        int res = 1 + solve(s, idx + 1); 
        for(int i = 1; idx + i <= s.size(); ++i){
            string t = s.substr(idx, i);
            if(st.find(t) != st.end()){
                res = min(res, solve(s, idx+i));
            }
        }
        return dp[idx] = res;
    }
    int minExtraChar(string s, vector<string>& dictionary) {
        dp.resize(s.size() + 1, -1);
        for(auto d: dictionary ) st.insert(d);
        return solve(s, 0);
    }
};
