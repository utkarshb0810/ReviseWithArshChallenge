class Solution {
public:
    int solve(int num, int k, bool taken, int cnt, map<string, int>& mp) {
        if (num > k + 1)
            return 0;
        string s = to_string(num) + "-" + to_string(taken) + "-" + to_string(cnt);
        int ans = 0;
        if (num == k)
            ans++;
        if (mp.count(s))
            return mp[s];
        if (taken) {
            ans += solve(num + pow(2, cnt), k, 0, cnt + 1, mp);
        } else {
            ans += solve(num + pow(2, cnt), k, 0, cnt + 1, mp);
            if (num > 0)
                ans += solve(num - 1, k, 1, cnt, mp);
        }
        return mp[s] = ans;
    }
    int waysToReachStair(int k) {
        int num = 1;
        bool taken = 0;
        map<string, int> mp;
        return solve(num, k, taken, 0, mp);
    }
};
