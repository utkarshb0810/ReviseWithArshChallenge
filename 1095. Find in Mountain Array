class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int leng = mountainArr.length();
        int i = 0, j = leng - 1;
        while (i < j) {
            int mid = i + (j-i)/2;
            if (mountainArr.get(mid) >= mountainArr.get(mid + 1)) {
                j = mid;
            } 
            else {
                i = mid + 1;
            }
        }
        int peak = i;
        int l = 0;
        int r = peak;
        while (l <= r) {
            int mid = l + (r-l) / 2;
            int cur = mountainArr.get(mid);
            if (cur == target) {
                return mid;
            } 
            else if (cur > target) {
                r = mid - 1;
            }
            else {
                l = mid + 1;
            }
        }

         l = peak + 1;
         r = leng - 1;
        while (l <= r) {
            int mid = l + (r-l) / 2;
            int cur = mountainArr.get(mid);
            if (cur == target) {
                return mid;
            } 
            else if (cur > target) {
                l = mid + 1;
            } 
            else {
                r = mid - 1;
            }
        }
        return -1;
    }
};
